{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ groupOptions: {} namespace object","../node_modules/ionicons/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","components/GroupMember.jsx","pages/ProfilePage.jsx","components/TaskItem.jsx","firebase.js","pages/TaskListPage.jsx","components/NotificationItem.jsx","pages/NotificationPage.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","GroupMember","props","name","color","onClick","deleteGroupMember","ProfilePage","useState","addMemberName","setAddMemberName","showEditNameAlert","setShowEditNameAlert","useIonViewWillEnter","console","log","localStorage","taskList","className","lines","userName","isOpen","onDidDismiss","header","buttons","text","handler","data","setUserName","inputs","type","placeholder","onIonChange","target","value","expand","addGroupMember","groupMember","index","key","toString","TaskItem","title","limit","replace","showModal","setCurrTaskIdx","completeTask","deleteTask","uploadNotificationData","a","firebase","firestore","collection","add","taskType","taskTitle","docRef","catch","error","getNotificationList","res","where","get","querySnapshot","forEach","doc","push","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","TaskListPage","newTaskTitle","setNewTaskTitle","newTaskLimit","setNewTaskLimit","showEditTaskModal","setShowEditTaskModal","editTaskTitle","setEditTaskTitle","editTaskLimit","setEditTaskLimit","currTaskIdx","JSON","parse","date","Date","today","getFullYear","getMonth","getDate","taskLimit","parseInt","splice","setTaskList","detail","position","displayFormat","pickerFormat","max","split","addTask","cssClass","editTask","remakeTask","NotiItem","message","myName","NotificationPage","notificationList","setNotificationList","length","newList","NotificationItem","App","showNotiList","state","setState","stringify","newGroupMember","assign","newTask","newTaskList","updateNotificationList","newNotificationList","localStorageTaskList","localStorageUserName","localStorageGroupMember","bind","path","render","to","exact","slot","tab","href","icon","person","list","notifications","React","Component","withIonLifeCycle","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sHAAA,IAAIA,EAAM,CACT,8BAA+B,CAC9B,GACA,GAED,uBAAwB,CACvB,GACA,GAED,uBAAwB,CACvB,GACA,GAED,0BAA2B,CAC1B,GACA,IAED,6BAA8B,CAC7B,GACA,IAED,0BAA2B,CAC1B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,sBAAuB,CACtB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,qBAAsB,CACrB,IACA,IAED,mCAAoC,CACnC,IACA,IAED,uBAAwB,CACvB,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,uBAAwB,CACvB,IACA,GAED,uBAAwB,CACvB,IACA,IAED,yBAA0B,CACzB,IACA,GAED,8BAA+B,CAC9B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,uBAAwB,CACvB,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,+BAAgC,CAC/B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,yBAA0B,CACzB,IACA,IAED,yBAA0B,CACzB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,sBAAuB,CACtB,IACA,IAED,0BAA2B,CAC1B,IACA,IAED,uBAAwB,CACvB,IACA,IAED,wBAAyB,CACxB,IACA,IAED,gCAAiC,CAChC,IACA,KAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B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","file":"static/js/main.f6346b3e.chunk.js","sourcesContent":["var map = {\n\t\"./ion-action-sheet.entry.js\": [\n\t\t95,\n\t\t5\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t96,\n\t\t6\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t97,\n\t\t7\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t98,\n\t\t17\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t99,\n\t\t18\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t100,\n\t\t43\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t101,\n\t\t19\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t102,\n\t\t20\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t103,\n\t\t21\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t104,\n\t\t22\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t105,\n\t\t44\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t106,\n\t\t10\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t107,\n\t\t23\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t108,\n\t\t45\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t109,\n\t\t46\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t110,\n\t\t24\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t111,\n\t\t25\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t112,\n\t\t26\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t113,\n\t\t27\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t114,\n\t\t28\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t115,\n\t\t8\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t116,\n\t\t14\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t117,\n\t\t9\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t118,\n\t\t29\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t119,\n\t\t30\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t120,\n\t\t31\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t121,\n\t\t11\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t122,\n\t\t16\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t123,\n\t\t47\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t124,\n\t\t32\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t125,\n\t\t33\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t126,\n\t\t34\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t127,\n\t\t35\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t128,\n\t\t48\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t129,\n\t\t13\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t130,\n\t\t49\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t131,\n\t\t36\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t132,\n\t\t15\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t133,\n\t\t37\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t134,\n\t\t38\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t135,\n\t\t39\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t136,\n\t\t12\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t137,\n\t\t50\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 70;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./ion-icon.entry.js\": [\n\t\t139,\n\t\t57\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 72;\nmodule.exports = webpackAsyncContext;","import { IonButton, IonItem, IonLabel } from \"@ionic/react\";\nimport React from \"react\";\n\nconst GroupMember = (props) => {\n  return (\n    <IonItem>\n      <IonLabel>{props.name}</IonLabel>\n      <IonButton color=\"danger\" onClick={() => props.deleteGroupMember()}>\n        削除\n      </IonButton>\n    </IonItem>\n  );\n};\nexport default GroupMember;\n","import {\n  IonContent,\n  IonItem,\n  IonList,\n  IonPage,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonInput,\n  IonButton,\n  IonLabel,\n  IonAlert,\n  useIonViewWillEnter,\n} from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport GroupMember from \"../components/GroupMember\";\n\nconst ProfilePage = (props) => {\n  const [addMemberName, setAddMemberName] = useState(false);\n  const [showEditNameAlert, setShowEditNameAlert] = useState(false);\n\n  useIonViewWillEnter(() => {\n    console.log(\"willEnter: profile\\n\", localStorage.taskList);\n  });\n  return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>プロフィール</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n\n      {/* My name */}\n      <div className=\"ion-padding\">\n        <IonItem lines=\"none\">\n          <IonLabel>名前：{props.userName}</IonLabel>\n          <IonButton onClick={() => setShowEditNameAlert(true)}>編集</IonButton>\n        </IonItem>\n      </div>\n\n      {/* 名前編集用alert */}\n      <IonAlert\n        isOpen={showEditNameAlert}\n        onDidDismiss={() => setShowEditNameAlert(false)}\n        header={\"名前を入力してください\"}\n        buttons={[\n          {\n            text: \"キャンセル\",\n            handler: () => {\n              setShowEditNameAlert(false);\n            },\n          },\n          {\n            text: \"完了\",\n            handler: (data) => {\n              props.setUserName(data.name);\n            },\n          },\n        ]}\n        inputs={[\n          {\n            name: \"name\",\n            type: \"text\",\n            placeholder: props.userName,\n          },\n        ]}\n      />\n\n      {/* Group */}\n      <div className=\"ion-padding\">\n        <h3>グループ</h3>\n      </div>\n\n      <IonContent className=\"ion-padding\">\n        <IonInput\n          placeholder=\"追加したいメンバーの名前\"\n          onIonChange={(e) => {\n            setAddMemberName(e.target.value);\n          }}\n        />\n        <IonButton\n          expand=\"block\"\n          onClick={() => props.addGroupMember(addMemberName)}\n        >\n          追加\n        </IonButton>\n        <IonList>\n          {props.groupMember.map((value, index) => {\n            return (\n              <GroupMember\n                key={index.toString()}\n                name={value}\n                index={index}\n                deleteGroupMember={() => props.deleteGroupMember(index)}\n              />\n            );\n          })}\n        </IonList>\n      </IonContent>\n    </IonPage>\n  );\n};\nexport default ProfilePage;\n","import { IonButton, IonGrid, IonItem, IonRow } from \"@ionic/react\";\nimport React from \"react\";\n\nconst TaskItem = (props) => {\n  return (\n    <IonItem>\n      <IonGrid>\n        <IonRow>\n          <h2>{props.title}</h2>\n        </IonRow>\n        <IonRow>\n          <p>期限：{props.limit.replace(/-/g, \"/\")}</p>\n        </IonRow>\n        <IonRow className=\"ion-justify-content-end\">\n          <IonButton\n            color=\"primary\"\n            onClick={() => {\n              props.showModal();\n              props.setCurrTaskIdx();\n            }}\n          >\n            編集\n          </IonButton>\n          <IonButton color=\"success\" onClick={() => props.completeTask()}>\n            完了\n          </IonButton>\n          <IonButton color=\"danger\" onClick={() => props.deleteTask()}>\n            削除\n          </IonButton>\n        </IonRow>\n      </IonGrid>\n    </IonItem>\n  );\n};\n\nexport default TaskItem;\n","import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDDjOfzmXMiduuonoJfhW9ryCKg7wpX5EI\",\n  authDomain: \"nucamp-970cd.firebaseapp.com\",\n  databaseURL: \"https://nucamp-970cd.firebaseio.com\",\n  projectId: \"nucamp-970cd\",\n  storageBucket: \"nucamp-970cd.appspot.com\",\n  messagingSenderId: \"541426173393\",\n  appId: \"1:541426173393:web:511860241bb155c4308cf0\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\n//firestoreアップロード処理\nexport async function uploadNotificationData(userName, type, title) {\n  firebase.firestore().collection(\"notificationList\").add({\n    taskType: type,\n    userName: userName,\n    taskTitle: title\n  }).then(function(docRef) {\n    console.log(\"Written with ID: \", docRef.id)\n  }).catch(function(error) {\n    console.log(\"Cloud firestore Error: \", error);\n  })\n}\n\n// firestoreから読み込む処理\nexport async function getNotificationList(groupMember) {\n  let res = []\n  firebase.firestore().collection(\"notificationList\").where(\"userName\", \"in\", groupMember)\n    .get()\n    .then((querySnapshot) => { \n      querySnapshot.forEach((doc) => {\n        res.push(doc.data())\n      })\n    }\n  )\n  return res\n}","import React, { useState } from \"react\";\nimport {\n  IonPage,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonContent,\n  IonList,\n  IonItem,\n  IonLabel,\n  IonInput,\n  IonDatetime,\n  IonButton,\n  IonModal,\n  IonRow,\n  useIonViewWillEnter,\n} from \"@ionic/react\";\n\nimport TaskItem from \"../components/TaskItem\";\nimport \"../css/taskList.css\";\nimport { uploadNotificationData } from \"../firebase\";\n\nconst TaskListPage = (props) => {\n  const [newTaskTitle, setNewTaskTitle] = useState(\"\");\n  const [newTaskLimit, setNewTaskLimit] = useState(\"\");\n  const [showEditTaskModal, setShowEditTaskModal] = useState(false);\n  const [editTaskTitle, setEditTaskTitle] = useState(\"\");\n  const [editTaskLimit, setEditTaskLimit] = useState(\"\");\n  const [currTaskIdx, setCurrTaskIdx] = useState(-1);\n\n  // 期限切れタスクの処理\n  useIonViewWillEnter(() => {\n    console.log(\"ionViewWillEnter\");\n    console.log(JSON.parse(localStorage.taskList));\n    const taskList = JSON.parse(localStorage.taskList);\n    const date = new Date();\n    const y = date.getFullYear().toString();\n    const m = (date.getMonth() + 1).toString();\n    const d = date.getDate().toString();\n    const today = y + m + d;\n    taskList.map((value, index) => {\n      let taskLimit = value.limit.replace(/-/g, \"\");\n      if (parseInt(taskLimit) < parseInt(today)) {\n        uploadNotificationData(props.userName, \"expired\", value.title);\n        taskList.splice(index, 1);\n      }\n    });\n    console.log(taskList);\n    props.setTaskList(taskList);\n  });\n\n  return (\n    <IonPage>\n      {/* ------ Header ------ */}\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>課題リスト</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      {/* ------ Add Task ------ */}\n      <div className=\"ion-padding\">\n        <h3>新規登録</h3>\n        <IonItem>\n          <IonInput\n            placeholder=\"課題内容\"\n            value={newTaskTitle}\n            onIonChange={(e) => setNewTaskTitle(e.detail.value)}\n          ></IonInput>\n        </IonItem>\n        <IonItem>\n          <IonLabel position=\"floating\">期限</IonLabel>\n          <IonDatetime\n            value={newTaskLimit}\n            displayFormat=\"YYYY MM DD\"\n            pickerFormat=\"YYYY MM DD\"\n            max=\"2030-01-01\"\n            onIonChange={(e) => {\n              setNewTaskLimit(e.detail.value.split(\"T\")[0]);\n            }}\n          ></IonDatetime>\n        </IonItem>\n        <IonButton\n          className=\"ion-margin-top\"\n          color=\"primary\"\n          expand=\"block\"\n          onClick={() => {\n            props.addTask(newTaskTitle, newTaskLimit);\n            setNewTaskTitle(\"\");\n            setNewTaskLimit(\"\");\n          }}\n        >\n          追加\n        </IonButton>\n      </div>\n\n      {/* ------ TaskList ------ */}\n      <div className=\"ion-padding\">\n        <h3>課題リスト</h3>\n      </div>\n\n      {/* ------ タスク編集用Modal ------- */}\n      <IonModal isOpen={showEditTaskModal} cssClass=\"ion-modal\">\n        <IonContent className=\"ion-padding ion-margin-bottom\">\n          <IonItem>\n            <IonInput\n              placeholder=\"課題内容\"\n              onIonChange={(e) => setEditTaskTitle(e.detail.value)}\n            ></IonInput>\n          </IonItem>\n          <IonItem>\n            <IonLabel position=\"floating\">期限</IonLabel>\n            <IonDatetime\n              displayFormat=\"YYYY MM DD\"\n              pickerFormat=\"YYYY MM DD\"\n              max=\"2030-01-01\"\n              onIonChange={(e) =>\n                setEditTaskLimit(e.detail.value.split(\"T\")[0])\n              }\n            ></IonDatetime>\n          </IonItem>\n          <IonRow className=\"ion-justify-content-end\">\n            <IonButton onClick={() => setShowEditTaskModal(false)}>\n              キャンセル\n            </IonButton>\n            <IonButton\n              onClick={() => {\n                props.editTask(editTaskTitle, editTaskLimit, currTaskIdx);\n                setShowEditTaskModal(false);\n              }}\n            >\n              完了\n            </IonButton>\n          </IonRow>\n        </IonContent>\n      </IonModal>\n\n      {/* タスクリスト */}\n      <IonContent className=\"ion-padding\">\n        <IonList>\n          {props.taskList.map((value, index) => {\n            return (\n              <TaskItem\n                key={index.toString()}\n                title={value.title}\n                limit={value.limit}\n                deleteTask={() => props.deleteTask(index)}\n                remakeTask={() => props.remakeTask(index)}\n                completeTask={() => props.completeTask(index)}\n                setCurrTaskIdx={() => setCurrTaskIdx(index)}\n                showModal={() => setShowEditTaskModal(true)}\n              />\n            );\n          })}\n        </IonList>\n      </IonContent>\n    </IonPage>\n  );\n};\nexport default TaskListPage;\n","import { IonCard, IonCardSubtitle, IonCardTitle } from \"@ionic/react\";\nimport React from \"react\";\nimport \"../css/notificationItem.css\";\n\nconst NotiItem = (props) => {\n  let color = \"\";\n  let message = `${props.name}さんがタスクを終了しました`;\n  if (props.name === props.myName) {\n    color = \"secondary\";\n  }\n  if (props.type === \"expired\") {\n    color = \"warning\";\n    message = `${props.name}さんがタスクを終えられませんでした`;\n  }\n\n  return (\n    <IonCard className=\"ion-padding\" color={color}>\n      <IonCardSubtitle className=\"ion-margin-bottom\">{message}</IonCardSubtitle>\n      <IonCardTitle>{props.taskTitle}</IonCardTitle>\n    </IonCard>\n  );\n};\nexport default NotiItem;\n","import React, { useState } from \"react\";\nimport NotificationItem from \"../components/NotificationItem\";\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nimport {\n  IonPage,\n  IonHeader,\n  IonToolbar,\n  IonTitle,\n  IonList,\n  IonContent,\n  useIonViewWillEnter,\n} from \"@ionic/react\";\n\nconst NotificationPage = (props) => {\n  const [notificationList, setNotificationList] = useState([]);\n\n  useIonViewWillEnter(async () => {\n    if (props.groupMember.length !== 0) {\n      console.log(props.groupMember);\n      const querySnapshot = await firebase\n        .firestore()\n        .collection(\"notificationList\")\n        .where(\"userName\", \"in\", props.groupMember)\n        .get();\n      const newList = [];\n      querySnapshot.forEach((doc) => {\n        newList.push(doc.data());\n      });\n      console.log(newList);\n      setNotificationList(newList);\n    }\n  });\n\n  return (\n    <IonPage>\n      {/*------ Header ------*/}\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>通知</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      {/* ------- Contetet ------ */}\n      <IonContent className=\"ion-padding\">\n        <IonList>\n          {notificationList.map((value, index) => {\n            return (\n              <NotificationItem\n                key={index.toString()}\n                myName={props.userName}\n                name={value.userName}\n                type={value.taskType}\n                taskTitle={value.taskTitle}\n              ></NotificationItem>\n            );\n          })}\n        </IonList>\n      </IonContent>\n    </IonPage>\n  );\n};\nexport default NotificationPage;\n","// react\nimport React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\n// Pages\nimport ProfilePage from \"./pages/ProfilePage\";\nimport TaskListPage from \"./pages/TaskListPage\";\nimport NotificationPage from \"./pages/NotificationPage\";\n\n// icons\nimport { person, list, notifications } from \"ionicons/icons\";\n\n//firebase\nimport { getNotificationList } from \"./firebase\";\nimport { uploadNotificationData } from \"./firebase\";\n\n// Ionic\nimport \"@ionic/react/css/core.css\";\nimport \"@ionic/react/css/normalize.css\";\nimport \"@ionic/react/css/structure.css\";\nimport \"@ionic/react/css/typography.css\";\nimport \"@ionic/react/css/padding.css\";\nimport \"@ionic/react/css/float-elements.css\";\nimport \"@ionic/react/css/text-alignment.css\";\nimport \"@ionic/react/css/text-transformation.css\";\nimport \"@ionic/react/css/flex-utils.css\";\nimport \"@ionic/react/css/display.css\";\nimport \"./theme/variables.css\";\nimport {\n  IonApp,\n  IonIcon,\n  IonLabel,\n  IonRouterOutlet,\n  IonTabBar,\n  IonTabButton,\n  IonTabs,\n  withIonLifeCycle,\n} from \"@ionic/react\";\nimport { IonReactRouter } from \"@ionic/react-router\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    let localStorageTaskList = [];\n    let localStorageUserName = \"\";\n    let localStorageGroupMember = [];\n    if (\"taskList\" in localStorage) {\n      localStorageTaskList = JSON.parse(localStorage.taskList);\n    }\n    if (\"userName\" in localStorage) {\n      localStorageUserName = JSON.parse(localStorage.userName);\n    }\n    if (\"groupMember\" in localStorage) {\n      localStorageGroupMember = JSON.parse(localStorage.groupMember);\n    }\n    // Stateの初期化\n    this.state = {\n      userName: localStorageUserName,\n      taskList: localStorageTaskList,\n      groupMember: localStorageGroupMember,\n      notificationList: [],\n      showModal: false,\n    };\n\n    this.setTaskList = this.setTaskList.bind(this);\n    this.setUserName = this.setUserName.bind(this);\n\n    this.addGroupMember = this.addGroupMember.bind(this);\n    this.deleteGroupMember = this.deleteGroupMember.bind(this);\n\n    this.addTask = this.addTask.bind(this);\n    this.editTask = this.editTask.bind(this);\n    this.completeTask = this.completeTask.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n\n    this.updateNotificationList = this.updateNotificationList.bind(this);\n    this.showNotiList = this.showNotiList.bind(this);\n  }\n  showNotiList = () => {\n    console.log(this.state.notificationList);\n  };\n  // タスクリストを更新する関数\n  setTaskList = (taskList) => {\n    this.setState({ taskList: taskList });\n    localStorage.taskList = JSON.stringify(taskList);\n  };\n\n  // ユーザネームを設定する関数\n  setUserName = (name) => {\n    this.setState({ userName: name });\n    // this.state.groupMemberの0番目は常に自分\n    let newGroupMember = Object.assign([], this.state.groupMember);\n    newGroupMember[0] = name;\n    this.setState({ groupMember: newGroupMember });\n    console.log(\"[info] setUserName\", this.state.userName);\n    localStorage.userName = JSON.stringify(name);\n    localStorage.groupMember = JSON.stringify(newGroupMember);\n  };\n  // グループメンバーを追加する\n  addGroupMember = (name) => {\n    let newGroupMember = Object.assign([], this.state.groupMember);\n    newGroupMember.push(name);\n    this.setState({ groupMember: newGroupMember });\n    localStorage.groupMember = JSON.stringify(newGroupMember);\n    console.log(\"[info] Add GroupMember\");\n  };\n  // グループメンバーを削除する\n  deleteGroupMember = (index) => {\n    let newGroupMember = Object.assign([], this.state.groupMember);\n    newGroupMember.splice(index, 1);\n    this.setState({ groupMember: newGroupMember });\n    localStorage.groupMember = JSON.stringify(newGroupMember);\n    console.log(\"[info] Delete GroupMember\");\n  };\n\n  //追加ボタンを押したときの処理\n  addTask = (title, limit) => {\n    const newTask = {\n      title: title,\n      limit: limit,\n    };\n    let newTaskList = Object.assign([], this.state.taskList);\n    newTaskList.push(newTask);\n    this.setState({ taskList: newTaskList });\n    localStorage.taskList = JSON.stringify(newTaskList);\n    console.log(\"[info] addTask\\n\", this.state.taskList);\n  };\n  // 編集ボタンを押した時の処理\n  editTask = (title, limit, index) => {\n    let newTaskList = Object.assign([], this.state.taskList);\n    newTaskList[index] = {\n      title: title,\n      limit: limit,\n    };\n    this.setState({ taskList: newTaskList });\n    localStorage.taskList = JSON.stringify(newTaskList);\n    console.log(\"[info] editTask\");\n  };\n  // 完了ボタンを押したときの処理\n  completeTask = async (index) => {\n    let newTaskList = Object.assign([], this.state.taskList);\n    const userName = this.state.userName;\n    const type = \"finish\";\n    const title = newTaskList[index].title;\n    await uploadNotificationData(userName, type, title);\n    newTaskList.splice(index, 1);\n    this.setState({ taskList: newTaskList });\n    localStorage.taskList = JSON.stringify(newTaskList);\n    const newList = await this.updateNotificationList();\n    console.log(newList);\n  };\n  //削除ボタンを押したときの処理\n  deleteTask = (index) => {\n    let newTaskList = Object.assign([], this.state.taskList);\n    newTaskList.splice(index, 1);\n    this.setState({ taskList: newTaskList });\n    localStorage.taskList = JSON.stringify(newTaskList);\n    console.log(\"[info] deleteTask\\n\", newTaskList);\n  };\n\n  //　通知リストを更新する関数\n  updateNotificationList = async () => {\n    let newNotificationList = [];\n    if (this.state.groupMember.length !== 0) {\n      newNotificationList = await getNotificationList(this.state.groupMember);\n    }\n    console.log(\"newNotificationList recieved\", newNotificationList);\n    this.setState({ notificationList: newNotificationList });\n    console.log(\"[info] uploadNotificationList\", this.state.notificationList);\n    return newNotificationList;\n  };\n\n  render() {\n    return (\n      <IonApp>\n        <IonReactRouter>\n          <IonTabs>\n            <IonRouterOutlet>\n              {/* Profile Page */}\n              <Route\n                path=\"/\"\n                render={() => <Redirect to=\"/profile\" />}\n                exact={true}\n              />\n              <Route\n                path=\"/profile\"\n                exact={true}\n                render={() => (\n                  <ProfilePage\n                    userName={this.state.userName}\n                    groupMember={this.state.groupMember}\n                    addGroupMember={this.addGroupMember}\n                    deleteGroupMember={this.deleteGroupMember}\n                    setUserName={this.setUserName}\n                    taskList={this.state.taskList}\n                  />\n                )}\n              />\n              {/* taskList Page*/}\n              <Route\n                path=\"/tasklist\"\n                exact={true}\n                render={() => (\n                  <TaskListPage\n                    setTaskList={this.setTaskList}\n                    taskList={this.state.taskList}\n                    deleteTask={this.deleteTask}\n                    addTask={this.addTask}\n                    editTask={this.editTask}\n                    completeTask={this.completeTask}\n                    userName={this.state.userName}\n                  />\n                )}\n              />\n              {/* NotificationList */}\n              <Route\n                path=\"/notification\"\n                exact={true}\n                render={() => (\n                  <NotificationPage\n                    a={this.showNotiList}\n                    notificationList={this.state.notificationList}\n                    updateNotificationList={this.updateNotificationList}\n                    userName={this.state.userName}\n                    groupMember={this.state.groupMember}\n                  />\n                )}\n              />\n            </IonRouterOutlet>\n            <IonTabBar slot=\"bottom\">\n              <IonTabButton tab=\"profile\" href=\"/profile\">\n                <IonIcon icon={person} />\n                <IonLabel>プロフィール</IonLabel>\n              </IonTabButton>\n              <IonTabButton tab=\"tasklist\" href=\"/tasklist\">\n                <IonIcon icon={list} />\n                <IonLabel>課題リスト</IonLabel>\n              </IonTabButton>\n              <IonTabButton tab=\"notification\" href=\"/notification\">\n                <IonIcon icon={notifications} />\n                <IonLabel>通知</IonLabel>\n              </IonTabButton>\n            </IonTabBar>\n          </IonTabs>\n        </IonReactRouter>\n      </IonApp>\n    );\n  }\n}\n\nexport default withIonLifeCycle(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}